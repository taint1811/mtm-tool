version: '3.8'

services:
  app:
    restart: unless-stopped
    container_name: ${APP_NAME:?err}-app
    build:
      context: ./docker/config
      dockerfile: app.Dockerfile
      args:
        FOLDER_NAME: ${FOLDER_NAME:?err}
    ports:
      - "${PORT_APP_90:?err}:9090"
    volumes:
      - ./:/data/www/${FOLDER_NAME:?err}
    # depends_on:
    #   - redis
    # user: 1001:1001

  # varnish:
  #   restart: unless-stopped
  #   container_name: ${APP_NAME:?err}-varnish
  #   build:
  #     context: ./docker/config/varnish
  #     dockerfile: varnish.Dockerfile
  #   ports:
  #     - "${PORT_VARNISH_60:?err}:80"
  #     # - "4${PORT_VARNISH_60:?err}:443"
  #   links:
  #     - nginx
  #   networks:
  #     - backend
  #     - dockerhaproxy_proxy
      
  redis:
    restart: unless-stopped
    container_name: ${APP_NAME:?err}-redis
    volumes:
        # - ./docker/data/redis:/data
        - ./docker/config/redis.conf:/usr/local/etc/redis/redis.conf
    user: 1001:1001
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # mariadb:
  #   container_name: ${APP_NAME:?err}-mariadb101
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?err}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE:?err}
  #     MYSQL_USER: ${MYSQL_USER:?err}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD:?err}
  #   volumes:
  #       - ./docker/data/mysql/dbdata:/var/lib/mysql'
  #       - ./docker/config/mysql:/etc/mysql/conf.d/
 